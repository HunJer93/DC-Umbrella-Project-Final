{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        "ScraperApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "Scraper API",
              "Description": "API used to send frontend payload to Scraper lambda",
              "FailOnWarnings" : true
            }
          },
        "SentimentAnalysisQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": "sentiment-analysis-queue"
            }
        },
        "TriggerSentimentAnalysisQueueSourceMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "FunctionName": "SentimentAnalysis",
                "BatchSize": 1,
                "EventSourceArn": {
                    "Fn::GetAtt": ["SentimentAnalysisQueue", "Arn"]
                }
            }
        },
        "ScraperLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:invokeFunction",
              "FunctionName":"TwitterWebScraper",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {"Fn::Join": ["", 
                ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "ScraperApi"}, "/*"]
              ]}
            }
          },
          "ScraperApiStage": {
            "DependsOn" : ["ApiGatewayAccount"],
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
              "DeploymentId": {"Ref": "ScraperApiDeployment"},
              "MethodSettings": [{
                "DataTraceEnabled": true,
                "HttpMethod": "*",
                "LoggingLevel": "INFO",
                "ResourcePath": "/*"
              }],
              "RestApiId": {"Ref": "ScraperApi"},
              "StageName": "LATEST"
            }
          },
          "ScraperApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": ["ScraperRequest"],
            "Properties": {
              "RestApiId": {"Ref": "ScraperApi"},
              "StageName": "DummyStage"
            }
          },
          "ApiGatewayCloudWatchLogsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [{
                  "Effect": "Allow",
                  "Principal": { "Service": ["apigateway.amazonaws.com"] },
                  "Action": ["sts:AssumeRole"]
                }]
              },
              "Policies": [{
                "PolicyName": "ApiGatewayLogsPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [{
                    "Effect": "Allow",
                    "Action": [
                      "logs:CreateLogGroup",
                      "logs:CreateLogStream",
                      "logs:DescribeLogGroups",
                      "logs:DescribeLogStreams",
                      "logs:PutLogEvents",
                      "logs:GetLogEvents",
                      "logs:FilterLogEvents"
                    ],
                    "Resource": "*"
                  }]
                }
              }]
            }
          },
          "ApiGatewayAccount": {
            "Type" : "AWS::ApiGateway::Account",
            "Properties" : {
              "CloudWatchRoleArn" : {"Fn::GetAtt" : ["ApiGatewayCloudWatchLogsRole", "Arn"] }
            }
          },
          "ScraperResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "RestApiId": {"Ref": "ScraperApi"},
              "ParentId": {"Fn::GetAtt": ["ScraperApi", "RootResourceId"]},
              "PathPart": "scraper"
            }
          },
          "ScraperRequest": {
            "DependsOn": "ScraperLambdaPermission",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "POST",
              "Integration": {
                "Type": "AWS",
                "IntegrationHttpMethod": "POST",
                "Uri": {"Fn::Join" : ["", 
                  ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/functions/", {"Fn::GetAtt": ["TwitterScraperFunction", "Arn"]}, "/invocations"]
                ]},
                "IntegrationResponses": [{
                  "StatusCode": 200
                }],
                "RequestTemplates": {
                  "application/json": {"Fn::Join" : ["", [
                    "{",
                      "\"Query\": \"$input.json('$query')\"",
                      "\"Num_Tweets\": \"$input.json('$numTweets')\"",
                    "}"
                  ]]}
                }
              },
              "RequestParameters": {
                "method.request.querystring.name": false
              },
              "ResourceId": {"Ref": "ScraperResource"},
              "RestApiId": {"Ref": "ScraperApi"},
              "MethodResponses": [{
                "StatusCode": 200
              }]
            }
          } 
    }
}